DECLARE 
	C NUMBER := 1;
	BEGIN 
		LOOP
			DBMS_OUTPUT.PUT_LINE(C);
			EXIT WHEN C = 5;
		C := C + 1;
	END LOOP;
END;
/

REM 10 TO 1
DECLARE 
	C NUMBER := 10;
BEGIN 
	LOOP
		DBMS_OUTPUT.PUT_LINE(C);
		EXIT WHEN C = 1;
		C := C-1;
	END LOOP;
END;
/

REM ASK FOR TWO NUMBERS : 4 9 : 4 5 6 7 8 9

DECLARE
	FIRST NUMBER := 4;
	SEC NUMBER := 9;
BEGIN 
	LOOP
		DBMS_OUTPUT.PUT_LINE(FIRST);
		EXIT WHEN FIRST = SEC;
		FIRST := FIRST +1;
	END LOOP;
END;
/

REM ASK FOR TWO NUMBERS : 2 6 : 2 3 4 5 6       ,   9 5 : 9 8 7 6 5

DECLARE 
	FIRST NUMBER := 9;
	SEC NUMBER := 6;
BEGIN 
    IF (FIRST < SEC) THEN
    	LOOP
    		DBMS_OUTPUT.PUT_LINE(FIRST);
    		EXIT WHEN FIRST = SEC;
			FIRST := FIRST + 1;
		END LOOP;
	ELSIF (SEC < FIRST) THEN 
		LOOP
			DBMS_OUTPUT.PUT_LINE(FIRST);
			EXIT WHEN FIRST = SEC;
			FIRST := FIRST - 1;
		END LOOP;
	END IF;
END;

ASK FOR TWO NUMBERS AND ORDER. ORDER MAY BE A FOR ASCENDING OR D FOR DESCENDING.

REM FIRST NUMBER : 5
REM SECOND NUMBER : 9
REM ORDER : D
9 8 7 6 5

REM FIRST NUMBER : 8
REM SECOND NUMBER : 4
REM ORDER : A
4 5 6 7 8

DECLARE 
	FIRST NUMBER := 9;
	SEC NUMBER := 6;
	O VARCHAR(10) := 'ASC';
	SMALL NUMBER;
	LARGENUM NUMBER ;
BEGIN 
        
    IF(FIRST > SEC) THEN
        SMALL  := SEC;
		LARGENUM  := FIRST;
	ELSE
        SMALL  := FIRST;
		LARGENUM  := SEC;
	END IF;

    IF (O = 'ASC') THEN
    	LOOP
    		DBMS_OUTPUT.PUT_LINE(SMALL);
    		EXIT WHEN SMALL = LARGENUM;
			SMALL := SMALL + 1;
		END LOOP;
	ELSIF (O = 'DESC') THEN 
		LOOP
			DBMS_OUTPUT.PUT_LINE(LARGENUM);
			EXIT WHEN SMALL = LARGENUM;
			LARGENUM := LARGENUM - 1;
		END LOOP;
	END IF;
END;


ASK FOR TWO NUMBERS AND DISPLAY THEM ALL AND IT'S SUM.
START : 5
END : 7
5 + 6 + 7 = 18

DECLARE
	STARTNUM NUMBER := 5;
	ENDNUM NUMBER := 7;
	SUMNUM NUMBER := 0;
BEGIN 
	LOOP 
		DBMS_OUTPUT.PUT(STARTNUM || CASE WHEN STARTNUM != ENDNUM THEN '+' END);
		SUMNUM := STARTNUM + SUMNUM;
		EXIT WHEN STARTNUM = ENDNUM;
		STARTNUM := STARTNUM + 1;
	END LOOP;
	DBMS_OUTPUT.PUT_LINE('='||SUMNUM);
END;
/


ASK FOR TWO NUMBERS AND DISPLAY IT'S SUM, COUNT AND AVERAGE.
N1 : 5
N2 : 7
7 + 6 + 5 = 18
COUNT : 3
AVERAGE : 6

N1 : 10
N2 : 7 
10 + 9 + 8 + 7 = 34
COUNT : 4
AVERAGE : 8.5

DECLARE
	N1 NUMBER := 10;
	N2 NUMBER := 7;
	SUMNUM NUMBER := 0;
	CNT NUMBER := 0;
	G NUMBER := 0;
	S NUMBER := 0;
BEGIN 

    IF(N1 > N2) THEN
    	G := N1;
		S := N2;
	ELSE
        G := N2;
		S := N1;
    END IF;
    
	LOOP 
		DBMS_OUTPUT.PUT(S || CASE WHEN S != G THEN ' + ' END);
		SUMNUM := S + SUMNUM;
		CNT := CNT + 1;
		EXIT WHEN S = G;
		S := S + 1;
	END LOOP;
	DBMS_OUTPUT.PUT_LINE(' = '||SUMNUM);
	DBMS_OUTPUT.PUT_LINE('COUNT : '||CNT);
	DBMS_OUTPUT.PUT_LINE('AVERAGE : '|| SUMNUM/CNT);
END;
/


