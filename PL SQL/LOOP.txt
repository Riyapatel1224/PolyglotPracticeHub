DECLARE 
	C NUMBER := 1;
	BEGIN 
		LOOP
			DBMS_OUTPUT.PUT_LINE(C);
			EXIT WHEN C = 5;
		C := C + 1;
	END LOOP;
END;
/

REM 10 TO 1
DECLARE 
	C NUMBER := 10;
BEGIN 
	LOOP
		DBMS_OUTPUT.PUT_LINE(C);
		EXIT WHEN C = 1;
		C := C-1;
	END LOOP;
END;
/

REM ASK FOR TWO NUMBERS : 4 9 : 4 5 6 7 8 9

DECLARE
	FIRST NUMBER := 4;
	SEC NUMBER := 9;
BEGIN 
	LOOP
		DBMS_OUTPUT.PUT_LINE(FIRST);
		EXIT WHEN FIRST = SEC;
		FIRST := FIRST +1;
	END LOOP;
END;
/

REM ASK FOR TWO NUMBERS : 2 6 : 2 3 4 5 6       ,   9 5 : 9 8 7 6 5

DECLARE 
	FIRST NUMBER := 9;
	SEC NUMBER := 6;
BEGIN 
    IF (FIRST < SEC) THEN
    	LOOP
    		DBMS_OUTPUT.PUT_LINE(FIRST);
    		EXIT WHEN FIRST = SEC;
			FIRST := FIRST + 1;
		END LOOP;
	ELSIF (SEC < FIRST) THEN 
		LOOP
			DBMS_OUTPUT.PUT_LINE(FIRST);
			EXIT WHEN FIRST = SEC;
			FIRST := FIRST - 1;
		END LOOP;
	END IF;
END;

ASK FOR TWO NUMBERS AND ORDER. ORDER MAY BE A FOR ASCENDING OR D FOR DESCENDING.

REM FIRST NUMBER : 5
REM SECOND NUMBER : 9
REM ORDER : D
9 8 7 6 5

REM FIRST NUMBER : 8
REM SECOND NUMBER : 4
REM ORDER : A
4 5 6 7 8

DECLARE 
	FIRST NUMBER := 9;
	SEC NUMBER := 6;
	O VARCHAR(10) := 'ASC';
	SMALL NUMBER;
	LARGENUM NUMBER ;
BEGIN 
        
    IF(FIRST > SEC) THEN
        SMALL  := SEC;
		LARGENUM  := FIRST;
	ELSE
        SMALL  := FIRST;
		LARGENUM  := SEC;
	END IF;

    IF (O = 'ASC') THEN
    	LOOP
    		DBMS_OUTPUT.PUT_LINE(SMALL);
    		EXIT WHEN SMALL = LARGENUM;
			SMALL := SMALL + 1;
		END LOOP;
	ELSIF (O = 'DESC') THEN 
		LOOP
			DBMS_OUTPUT.PUT_LINE(LARGENUM);
			EXIT WHEN SMALL = LARGENUM;
			LARGENUM := LARGENUM - 1;
		END LOOP;
	END IF;
END;


ASK FOR TWO NUMBERS AND DISPLAY THEM ALL AND IT'S SUM.
START : 5
END : 7
5 + 6 + 7 = 18

DECLARE
	STARTNUM NUMBER := 5;
	ENDNUM NUMBER := 7;
	SUMNUM NUMBER := 0;
BEGIN 
	LOOP 
		DBMS_OUTPUT.PUT(STARTNUM || CASE WHEN STARTNUM != ENDNUM THEN '+' END);
		SUMNUM := STARTNUM + SUMNUM;
		EXIT WHEN STARTNUM = ENDNUM;
		STARTNUM := STARTNUM + 1;
	END LOOP;
	DBMS_OUTPUT.PUT_LINE('='||SUMNUM);
END;
/


ASK FOR TWO NUMBERS AND DISPLAY IT'S SUM, COUNT AND AVERAGE.
N1 : 5
N2 : 7
7 + 6 + 5 = 18
COUNT : 3
AVERAGE : 6

N1 : 10
N2 : 7 
10 + 9 + 8 + 7 = 34
COUNT : 4
AVERAGE : 8.5

DECLARE
	N1 NUMBER := 10;
	N2 NUMBER := 7;
	SUMNUM NUMBER := 0;
	CNT NUMBER := 0;
	G NUMBER := 0;
	S NUMBER := 0;
BEGIN 

    IF(N1 > N2) THEN
    	G := N1;
		S := N2;
	ELSE
        G := N2;
		S := N1;
    END IF;
    
	LOOP 
		DBMS_OUTPUT.PUT(S || CASE WHEN S != G THEN ' + ' END);
		SUMNUM := S + SUMNUM;
		CNT := CNT + 1;
		EXIT WHEN S = G;
		S := S + 1;
	END LOOP;
	DBMS_OUTPUT.PUT_LINE(' = '||SUMNUM);
	DBMS_OUTPUT.PUT_LINE('COUNT : '||CNT);
	DBMS_OUTPUT.PUT_LINE('AVERAGE : '|| SUMNUM/CNT);
END;
/


-----------------------------------------------------------------------------------------

ASK FOR TWO NUMBERS : 4  14

Q 1 -> DISPLAY ALL WHICH ARE DIVISIBLE BY 3
Q 2 -> SUM ALL EVEN NUMBERS
Q 3 -> AVERAGE ALL WHICH ARE DIVISIBLE BY 5
DIVIBLE BY 3 : 6 9 12 
SUM OF EVEN : 54
AVG : 7.5

DECLARE
	N1 NUMBER := 4;
	N2 NUMBER := 14;
	DIVBY3 NUMBER := 0;
	SUMEVEN NUMBER := 0;
	SUMDIV5 NUMBER := 0;
	CNT NUMBER := 0;
BEGIN
    DBMS_OUTPUT.PUT('DIVIIBLE BY 3: ');
	LOOP
        DBMS_OUTPUT.PUT(CASE WHEN MOD(N1,3)=0 THEN ' '||N1 END);
		IF MOD(N1,2) = 0 THEN
            SUMEVEN := SUMEVEN + N1;
		END IF;

		IF MOD(N1,5) = 0 THEN
            SUMDIV5 := SUMDIV5 + N1;
            CNT := CNT + 1;
		END IF;
		EXIT WHEN N1 = N2;
		N1 := N1+1;

	END LOOP;
	DBMS_OUTPUT.PUT_LINE(NULL);
	DBMS_OUTPUT.PUT_LINE('SUM OF EVEN NUMBER : '||SUMEVEN);
	DBMS_OUTPUT.PUT_LINE('AVERAGE OF ALL WHICH ARE DIVISIBLE BY 5 : '||SUMDIV5/CNT);

END;
/


DECLARE 
	NAME VARCHAR(20) := 'GANESH';
	LENNAME NUMBER := LENGTH(NAME);
	CNT NUMBER := 0;
BEGIN
	LOOP
    	DBMS_OUTPUT.PUT_LINE(NAME);
		CNT := CNT + 1;
    EXIT WHEN LENNAME = CNT;
	END LOOP;
END;
/


ASK FOR NAME : GANESH
G
A
N
E
S
H

DECLARE
	NAME VARCHAR(10) := 'GANESH';
	LENNAME NUMBER := LENGTH(NAME);
	CNT NUMBER := 0;
BEGIN
	LOOP
    		CNT := CNT + 1;
			DBMS_OUTPUT.PUT_LINE(SUBSTR(NAME,CNT,1));
			
    	EXIT WHEN CNT = LENNAME;
    END LOOP;
END;
/


GANESH
ANESH
NESH
ESH
SH
H

DECLARE
	NAME VARCHAR(10) := 'GANESH';
	LENNAME NUMBER := LENGTH(NAME);
	CNT NUMBER := 0;
BEGIN
	LOOP
    		CNT := CNT + 1;
			DBMS_OUTPUT.PUT_LINE(SUBSTR(NAME,CNT));
			
    	EXIT WHEN CNT = LENNAME;
    END LOOP;
END;
/

G
 A
  N
   E
    S
     H

DECLARE
	NAME VARCHAR(10) := 'GANESH';
	LENNAME NUMBER := LENGTH(NAME);
	CNT NUMBER := 0;
BEGIN
	LOOP
    		CNT := CNT + 1;
			DBMS_OUTPUT.PUT_LINE(LPAD(SUBSTR(NAME,CNT,1),CNT,' '));
			
    	EXIT WHEN CNT = LENNAME;
    END LOOP;
END;
/

G
GA
GAN
GANE
GANES
GANESH

DECLARE
	NAME VARCHAR(10) := 'GANESH';
	LENNAME NUMBER := LENGTH(NAME);
	CNT NUMBER := 0;
BEGIN
	LOOP
    		CNT := CNT + 1;
			DBMS_OUTPUT.PUT_LINE(SUBSTR(NAME,1,CNT));
			
    	EXIT WHEN CNT = LENNAME;
    END LOOP;
END;
/

     H
    SH
   ESH
  NESH
 ANESH
GANESH

DECLARE
	NAME VARCHAR(10) := 'GANESH';
	LENNAME NUMBER := LENGTH(NAME);
	CNT NUMBER := 0;
BEGIN
	LOOP
    		CNT := CNT + 1;
			DBMS_OUTPUT.PUT_LINE(LPAD(SUBSTR(NAME,LENNAME,CNT),LENGTH(NAME),' '));
			LENNAME := LENNAME -1;
    	EXIT WHEN LENNAME = 0;
    END LOOP;
END;
/

GANESH
 ANESH 
  NESH
   ESH
    SH
     H


DECLARE
	NAME VARCHAR(10) := 'GANESH';
	LENNAME NUMBER := LENGTH(NAME);
	CNT NUMBER := 0;
BEGIN
	LOOP
    		CNT := CNT + 1;
			DBMS_OUTPUT.PUT_LINE(LPAD(SUBSTR(NAME,CNT,LENNAME),LENGTH(NAME),' '));
			LENNAME := LENNAME -1;
    	EXIT WHEN LENNAME = 0;
    END LOOP;
END;
/


     HG
    SHGA
   ESHGAN
  NESHGANE
`ANESHGANES
GANESHGANESH


DECLARE
	NAME VARCHAR(10) := 'GANESH';
	LENNAME NUMBER := LENGTH(NAME);
	CNT NUMBER := 0;
BEGIN
	LOOP
    		CNT := CNT + 1;
			DBMS_OUTPUT.PUT_LINE(LPAD(SUBSTR(NAME,LENNAME,CNT),LENGTH(NAME),' ') || SUBSTR(NAME,1,CNT));
			-- DBMS_OUTPUT.PUT_LINE(SUBSTR(NAME,1,CNT));
			LENNAME := LENNAME -1;
    	EXIT WHEN LENNAME = 0;
    END LOOP;
END;
/

    GANESHGANESH 
     ANESHGANES
      NESHGANE
       ESHGAN
        SHGA
         HG

DECLARE
	NAME VARCHAR(10) := 'GANESH';
	LENNAME NUMBER := LENGTH(NAME);
	CNT NUMBER := 0;
BEGIN
	LOOP
    		CNT := CNT + 1;
			DBMS_OUTPUT.PUT_LINE(LPAD(SUBSTR(NAME,CNT,LENNAME),LENGTH(NAME),' ') || SUBSTR(NAME,CNT));
			LENNAME := LENNAME -1;
    	EXIT WHEN LENNAME = 0;
    END LOOP;
END;
/


	HG
       SHGA
      ESHGAN
     NESHGANE
    ANESHGANES
   GANESHGANESH 
    ANESHGANES
     NESHGANE
      ESHGAN
       SHGA
        HG


DECLARE
	NAME VARCHAR(10) := 'GANESH';
	LENNAME NUMBER := LENGTH(NAME);
	CNT NUMBER := 0;
BEGIN
	LOOP
    		CNT := CNT + 1;
			DBMS_OUTPUT.PUT_LINE(LPAD(SUBSTR(NAME,LENNAME,CNT),LENGTH(NAME),' ') || SUBSTR(NAME,1,CNT));
			LENNAME := LENNAME -1;
    	EXIT WHEN LENNAME = 0;
    END LOOP;

	LENNAME  := LENGTH(NAME);
	CNT  := 0;

	LOOP
    		CNT := CNT + 1;
			DBMS_OUTPUT.PUT_LINE(LPAD(SUBSTR(NAME,CNT,LENNAME),LENGTH(NAME),' ') || SUBSTR(NAME,CNT));
			LENNAME := LENNAME -1;
    	EXIT WHEN LENNAME = 0;
    END LOOP;
END;
/

	GH
       GASH
      GANESH
     GANENESH
    GANESANESH
   GANESHGANESH 
    GANESANESH
     GANENESH
      GANESH
       GASH
        GH


DECLARE
	NAME VARCHAR(10) := 'GANESH';
	LENNAME NUMBER := LENGTH(NAME);
	CNT NUMBER := 0;
BEGIN
	LOOP
    		CNT := CNT + 1;
			DBMS_OUTPUT.PUT_LINE(LPAD(SUBSTR(NAME,LENNAME,CNT),LENGTH(NAME),' ') || SUBSTR(NAME,1,CNT));
			LENNAME := LENNAME -1;
    	EXIT WHEN LENNAME = 0;
    END LOOP;

	LENNAME  := LENGTH(NAME);
	CNT  := 0;

	LOOP
    		CNT := CNT + 1;
			DBMS_OUTPUT.PUT_LINE(LPAD(SUBSTR(NAME,CNT,LENNAME),LENGTH(NAME),' ') || SUBSTR(NAME,CNT));
			LENNAME := LENNAME -1;
    	EXIT WHEN LENNAME = 0;
    END LOOP;
END;
/


     GH
    GASH
   GANESH
  GANENESH
 GANESANESH
GANESHGANESH
 GANESANESH
  GANENESH
   GANESH
    GASH
     GH

DECLARE
	NAME VARCHAR(10) := 'GANESH';
	LENNAME NUMBER := LENGTH(NAME);
	LENNAMECONST NUMBER := LENGTH(NAME);
	CNT NUMBER := 0;
BEGIN
	LOOP
    		CNT := CNT + 1;
			DBMS_OUTPUT.PUT_LINE(LPAD(SUBSTR(NAME,1,CNT),LENGTH(NAME),' ') || SUBSTR(NAME,LENNAME,CNT));
			LENNAME := LENNAME -1;
    	EXIT WHEN LENNAME = 0;
    END LOOP;

	LENNAME  := LENGTH(NAME)-1;
	CNT  := 0;

	LOOP
    		CNT := CNT + 1;
			DBMS_OUTPUT.PUT_LINE(LPAD(SUBSTR(NAME,1,LENNAME),LENGTH(NAME),' ') || SUBSTR(NAME,CNT+1,LENNAMECONST));
			LENNAME := LENNAME -1;
    	EXIT WHEN LENNAME = 0;
    END LOOP;
END;
/


GANESHGANESH
GANES  ANESH
GANE    NESH
GAN      ESH
GA        SH
G          H
GA        SH
GAN      ESH
GANE    NESH
GANES  ANESH
GANESHGANESH


DECLARE
	NAME VARCHAR(10) := 'GANESH';
	LENNAME NUMBER := LENGTH(NAME);
	LENNAMECONST NUMBER := LENGTH(NAME);
	CNT NUMBER := 0;
BEGIN
	LOOP
    		CNT := CNT + 1;
			DBMS_OUTPUT.PUT_LINE(RPAD(SUBSTR(NAME,1,LENNAME),LENGTH(NAME),' ') || LPAD(SUBSTR(NAME,CNT,LENNAMECONST),LENGTH(NAME),' '));
			LENNAME := LENNAME -1;
    	EXIT WHEN LENNAME = 0;
    END LOOP;

	LENNAME  := LENGTH(NAME);
	CNT  := 1;

	LOOP
    		CNT := CNT + 1;
			DBMS_OUTPUT.PUT_LINE(RPAD(SUBSTR(NAME,1,CNT),LENGTH(NAME),' ') || LPAD(SUBSTR(NAME,LENNAME-1,CNT),LENGTH(NAME),' '));
			LENNAME := LENNAME -1;
    	EXIT WHEN LENNAME = 1;
    END LOOP;
END;
/



GANESHGANESH
 ANESHGANES 
  NESHGANE  
   ESHGAN   
    SHGA    
     HG     
    SHGA    
   ESHGAN   
  NESHGANE  
 ANESHGANES 
GANESHGANESH


DECLARE
	NAME VARCHAR(10) := 'GANESH';
	LENNAME NUMBER := LENGTH(NAME);
	LENNAMECONST NUMBER := LENGTH(NAME);
	CNT NUMBER := 0;
BEGIN
	LOOP
    		CNT := CNT + 1;
			DBMS_OUTPUT.PUT_LINE(LPAD(SUBSTR(NAME,CNT,LENNAMECONST),LENGTH(NAME),' ') || RPAD(SUBSTR(NAME,1,LENNAME),LENGTH(NAME),' '));
			LENNAME := LENNAME -1;
    	EXIT WHEN LENNAME = 0;
    END LOOP;

	LENNAME  := LENGTH(NAME)-1;
	CNT  := 2;

	LOOP
    		CNT := CNT + 1;
			DBMS_OUTPUT.PUT_LINE(LPAD(SUBSTR(NAME,LENNAME,CNT),LENGTH(NAME),' ') || RPAD(SUBSTR(NAME,1,CNT-1),LENGTH(NAME),' '));
			LENNAME := LENNAME -1;
    	EXIT WHEN LENNAME = 0;
    END LOOP;
END;
/


1       9
 2     8
  3   7
   4 6
    5
   4 6
  3   7
 2     8
1       9

DECLARE 
	NUMBER1 NUMBER := 1;
	NUMBER2 NUMBER := 9;
	CNT NUMBER := 0;
	SPACENUM NUMBER := 7;
BEGIN
    LOOP
    	CNT := CNT + 1;
    	DBMS_OUTPUT.PUT_LINE(LPAD(NUMBER1,CNT,' ') || LPAD(' ',SPACENUM,' ') || CASE WHEN NUMBER1 != NUMBER2 THEN NUMBER2 END);
		SPACENUM := SPACENUM - 2;
		NUMBER1 := NUMBER1 + 1;
		NUMBER2 := NUMBER2 - 1;
	EXIT WHEN NUMBER1 = 6;
	END LOOP;

	NUMBER1  := 4;
	NUMBER2  := 6;
	CNT  := 5;
	SPACENUM  := 1;
	LOOP
    	CNT := CNT - 1;
    	DBMS_OUTPUT.PUT_LINE(LPAD(NUMBER1,CNT,' ') || LPAD(' ',SPACENUM,' ') || CASE WHEN NUMBER1 != NUMBER2 THEN NUMBER2 END);
		SPACENUM := SPACENUM + 2;
		NUMBER1 := NUMBER1 - 1;
		NUMBER2 := NUMBER2 + 1;
	EXIT WHEN NUMBER2 = 10;
	END LOOP;
END;
/


-- ASK FOR A NUMBER : 10
-- DISPLAY FIBONACCI NUMBER SERIES OF 10 NUMBERS.
-- 0 1 1 2 3 5 8 13 21 34

DECLARE 
    NUMBER1 NUMBER := 0;
	NUMBER2 NUMBER := 1;
	CNT NUMBER := 0;
	FIBONACCI NUMBER := 10;
	THIRD NUMBER := 0;
BEGIN 
    DBMS_OUTPUT.PUT_LINE(NUMBER1);
	DBMS_OUTPUT.PUT_LINE(NUMBER2);
    WHILE CNT < FIBONACCI LOOP
    	THIRD := NUMBER1 + NUMBER2;
		NUMBER1 := NUMBER2;
		NUMBER2 := THIRD;
		DBMS_OUTPUT.PUT_LINE(THIRD);
		CNT := CNT+1;
	END LOOP;
END;
/


-- ASK FOR A STRING AND FIND IT'S LENGTH. (WITHOUT USING LENGTH FUNCTION.)

DECLARE 
	T VARCHAR(100) := 'GANESH';
	L NUMBER;
BEGIN
	L := INSTR(T || '#','#',-1)-1;
	DBMS_OUTPUT.PUT_LINE('LENGTH OF T IS '||L);
END;
/

DECLARE 
	T VARCHAR(100) := 'GANESH';
	P NUMBER := 1;
	L NUMBER := 0;
BEGIN
	LOOP 
		IF SUBSTR(T,P,1) IS NOT NULL THEN
			L := L+1;
			P := P+1;
		ELSE
			EXIT;
		END IF;
	END LOOP;

	DBMS_OUTPUT.PUT_LINE('LENGTH OF THE STRING : '||L);
END;
/
	

-- ASK FOR A STRING AND FIND IT'S REVERSE STRING. (WITHOUT USING REVERSE FUNCTION.)

DECLARE 
	STRNAME VARCHAR(50) := 'GANESH';
	REVSTR VARCHAR(50) ;
	LENSTR NUMBER := LENGTH(STRNAME);
	CNT NUMBER := LENGTH(STRNAME);
BEGIN
	WHILE LENSTR != 0 LOOP
		REVSTR := REVSTR || SUBSTR(STRNAME,CNT,1);
		
		LENSTR := LENSTR - 1;
		CNT := CNT - 1;
	END LOOP;

	DBMS_OUTPUT.PUT_LINE(REVSTR);
END;
/

-- ASK FOR A STRING AND FIND WHETHER IT IS PELINDROM STRING OR NOT? (WITHOUT USING REVERSE FUNCTION.)

DECLARE 
	STRNAME VARCHAR(50) := 'ABCBA';
	REVSTR VARCHAR(50) ;
	LENSTR NUMBER := LENGTH(STRNAME);
	CNT NUMBER := LENGTH(STRNAME);
BEGIN
	WHILE LENSTR != 0 LOOP
		REVSTR := REVSTR || SUBSTR(STRNAME,CNT,1);
		LENSTR := LENSTR - 1;
		CNT := CNT - 1;
	END LOOP;

	IF STRNAME = REVSTR THEN
        DBMS_OUTPUT.PUT_LINE('STRING IS PALINDROME');
	ELSE
        DBMS_OUTPUT.PUT_LINE('NOT A PALINDROME');
	END IF;
END;
/


NUMBER: 6
6 X 1 = 6
6 X 2 = 12
::
6 X 10 = 60


DECLARE 
	NUM1 NUMBER := 6;
	CNT NUMBER := 1;
BEGIN 
	WHILE CNT != 11 LOOP
    	DBMS_OUTPUT.PUT_LINE(NUM1 || ' * ' || CNT ||' = '||(NUM1*CNT));
		CNT := CNT + 1;
	END LOOP;
END;
/

TABLE NUMBER : 7
START : 3
END : 6
7 X 3 = 21
7 X 4 = 28
7 X 5 = 35
7 X 6 = 42


DECLARE 
	TBLNUM NUMBER := 7;
	STRT NUMBER := 3;
	ENDNUM NUMBER := 6;
BEGIN 
	WHILE STRT != ENDNUM+1 LOOP
    	DBMS_OUTPUT.PUT_LINE(TBLNUM || ' * ' || STRT ||' = '||(TBLNUM*STRT));
		STRT := STRT + 1;
	END LOOP;
END;
/


START TABLE : 5
END TABLE :7
5 X 1 = 5
5 X 2 = 10
::
::
5 X 10 = 50

6 X 1 = 6
6 X 2 = 12
::
::
6 X 10 = 60

DECLARE 
	TBLNUMSTR NUMBER := 5;
	TBLNUMEND NUMBER := 7;
	CNT NUMBER := 1;
BEGIN 
	WHILE TBLNUMSTR != TBLNUMEND+1 LOOP
    CNT := 1;
    	WHILE CNT != 11 LOOP
    		DBMS_OUTPUT.PUT_LINE(TBLNUMSTR || ' * ' || CNT ||' = '||(TBLNUMSTR*CNT));
			CNT := CNT + 1;
		END LOOP;
		DBMS_OUTPUT.PUT_LINE(CHR(10));
		TBLNUMSTR := TBLNUMSTR + 1;
	END LOOP;
END;
/


IMP:
54321 
AbCdEf











