-- DISPLAY FIRST_NAME , SALARY , INCREMENTED SALARY. IF EMPLOYEE IS HIRED IN FIRST WEEK OF MONTH 10%, 2nd WEEK 20% ... 5th WEEK 50%

-- SELECT FIRST_NAME, SALARY,
--     CASE WHEN TO_CHAR(HIRE_DATE,'DD') BETWEEN '01' AND '07' THEN (SALARY*1.1)
--     	 WHEN TO_CHAR(HIRE_DATE,'DD') BETWEEN '08' AND '14' THEN (SALARY*1.2)
--          WHEN TO_CHAR(HIRE_DATE,'DD') BETWEEN '15' AND '21' THEN (SALARY*1.3)
--     	 WHEN TO_CHAR(HIRE_DATE,'DD') BETWEEN '22' AND '28' THEN (SALARY*1.4) ELSE SALARY*1.5 END "INCREMENT SALARY" FROM EMPLOYEES;


-- COUNT EMPLOYEES WHOSE SECOND DIGIT OF EMPLOYEE_ID IS 0 (ZERO)

	-- SELECT COUNT(*) "SECOND DIGIT OF EMPLOYEE_ID IS 0 (ZERO)" FROM EMPLOYEES WHERE SUBSTR(EMPLOYEE_ID,2,1) = '0';



-- DISPLAY COMMISSION_PCT AND EXTRA COLUMN IN WHICH IT SHOULD DISPLAY 'YES' IF COMMISSION_PCT IS NOT NULL OR 'NO' IF COMMISSION_PCT IS NULL (DON'T USE NVL2)

	-- SELECT COMMISSION_PCT,
 --        CASE WHEN COMMISSION_PCT IS NOT NULL THEN 'YES' ELSE 'NO' END "COMMISSION_PCT STATUS" FROM EMPLOYEES;

	-- SELECT COMMISSION_PCT, NVL2(COMMISSION_PCT,'YES','NO') FROM EMPLOYEES;

-- DISPLAY COUNT OF EMPLOYEES DEPARTMENT WISE FOR DEPARTMENT 50,90,110,10. (CROSS TAB REPORT) 

	-- SELECT COUNT(*) FROM EMPLOYEES;

-- SELECT CASE WHEN DEPARTMENT_ID = 10 THEN 'DEPARTMENT_ID 10'
--     		WHEN DEPARTMENT_ID = 50 THEN 'DEPARTMENT_ID 50'
--     		WHEN DEPARTMENT_ID = 90 THEN 'DEPARTMENT_ID 90'
--     		WHEN DEPARTMENT_ID = 110 THEN 'DEPARTMENT_ID 110'
--     ELSE 'OTHER' END "DEPARTMENTS",
--     COUNT(EMPLOYEE_ID) "EMPLOYEES COUNT"
-- FROM EMPLOYEES
-- WHERE DEPARTMENT_ID IN(50,90,110,10)
-- GROUP BY DEPARTMENT_ID
-- ORDER BY DEPARTMENT_ID;

-- DISPLAY LOWEST SALARY FOR IT_PROG, AVERAGE SALARY FOR ST_CLERK, HIGHEST SALARY FOR SA_REP (CROSS TAB REPORT, USING CASE 2nd SYNTAX)

-- SELECT MIN(CASE WHEN JOB_ID = 'IT_PROG' THEN SALARY END) "IT_PROG LOWEST SAL",
--        AVG(CASE WHEN JOB_ID = 'ST_CLERK' THEN SALARY END) "ST_CLERK AVERAGE SAL",
--        MAX(CASE WHEN JOB_ID = 'SA_REP' THEN SALARY END) "SA_REP HIGHEST SAL"
-- FROM EMPLOYEES 
-- WHERE JOB_ID IN('IT_PROG','ST_CLERK','SA_REP');

-- ADD 600 + '$99(999)99' - 'ƒ77.777,77' (USING 3 PARAMETERS) 

-- SELECT 600 + TO_NUMBER(REPLACE(REPLACE(REPLACE('$99(999)99','$',''),'(',''),')',''))
--            - TO_NUMBER(REPLACE(REPLACE(REPLACE('ƒ77.777,77','ƒ',''),'.',''),',',''))
-- FROM DUAL;

-- DISPLAY LOWEST SALARY FOR DEPARTMENT 20, AVERAGE SALARY FOR DEPARTMENT 50, HIGHEST SALARY FOR DEPARTMENT 90 (MATRIX REPORT, USING DECODE)
-- SELECT DECODE(DEPARTMENT_ID,20,MIN(SALARY),
--     						50,AVG(SALARY),
--     						90,MAX(SALARY) , NULL) "SALARY"
--     FROM EMPLOYEES WHERE DEPARTMENT_ID IN(20,50,90)
--     GROUP BY DEPARTMENT_ID;

------------------------------------------------------------------------------------------------------------------------------------------------------------

-- DISPLAY SALARY IN SPECIFIED FORMAT : Rupees Twenty-Four Thousand Only

-- DISPLAY LAST_NAME , HIRE_DATE , TOTAL YEARS COMPLETED , EXTRA MONTHS COMPLETED , EXTRA DAYS COMPLETED. 

-- DISPLAY FIRST_NAME , HIRE_DATE AND 'FIRST' IF EMPLOYEE IS HIRED IN FIRST HALF OF QUARTER ELSE 'SECOND'. (USING CASE) 

--  FIRST_NAME , HIRE_DATE ,
-- CASE WHEN TO_CHAR(HIRE_DATE,'DD') <=15 THEN 'FIRST'
-- ELSE 'SECOND' END "QUATER" FROM EMPLOYEES;

-- FIND FIRST VOWEL IN FIRST_NAME SPELLING FROM LEFT. IF IT IS 'a' OR 'A' INCREMENT +10%, 'e' OR 'E' +20% , 'i' OR 'I' +30%  FOR REMAINING +40%. 

-- DISPLAY DEPARTMENT_ID WISE , MANAGER_ID WISE , Q1_MIN_SAL , Q2_AVG_SAL, Q3_MAX_SAL AND Q4_SUM_SAL. (CROSS TAB REPORT). SORT THE RESULT IN DESCENDING ORDER OF 1st AND 2nd COLUMNS.

-- SELECT DEPARTMENT_ID , MANAGER_ID , 
-- MIN(CASE WHEN TO_CHAR(HIRE_DATE,'Q') = '1' THEN SALARY END)  Q1_MIN_SAL,
-- AVG(CASE WHEN TO_CHAR(HIRE_DATE,'Q') = '2' THEN SALARY END)  Q2_AVG_SAL,
-- MAX(CASE WHEN TO_CHAR(HIRE_DATE,'Q') = '3' THEN SALARY END)  Q3_MAX_SAL,
-- SUM(CASE WHEN TO_CHAR(HIRE_DATE,'Q') = '4' THEN SALARY END)  Q4_SUM_SAL
-- FROM EMPLOYEES 
-- GROUP BY DEPARTMENT_ID , MANAGER_ID
-- ORDER BY 1 DESC, 2 DESC;

-- DISPLAY YEAR WISE COUNT OF EMPLOYEES FOR EACH QUARTER WITH COLUMN ALIAS Q1_CNT , Q2_CNT ETC. (MATRIX REPORT) 

-- DISPLAY FIRST_NAME AND HIRE_DATE FOR THE EMPLOYEE WHO WAS HIRED 15th IN COMPANY. 

-- DISPLAY TOTAL OF SALARY, JOB_ID WISE FOR JOBS OTHER THAN AC_ACCOUNT, AC_MGR , ST_CLERK , SA_REP, SA_MAN , MK_REP , MK_MAN. (MATRIX REPORT)

-- DISPLAY HIRE QUARTER WISE , NO. OF EMPLOYEES HIRED. DISPLAY ONLY QUARTER 2 AND 4 INFO.

-- DISPLAY JOB_ID WISE NO. OF EMPLOYEES. INCLUDE THOSE WHO WORKS IN DEPARTMENT 50,90,60,80 (DON'T USE SPECIAL OPERATOR). EXCLUDE THOSE WHO REPORTS TO MANAGER 100,124,149 (DON'T USE MULTI ROW OPERATOR)


-- DISPLAY FIRST_NAME , SALARY , INCREMENTED SALARY. IF EMPLOYEE IS HIRED IN EVEN WEEK OF YEAR 20% OTHERWISE 10%.

-- DISPLAY LOWEST SALARY FOR MANAGER 100, AVERAGE SALARY FOR MANAGER 124, HIGHEST SALARY FOR MANAGER 149 (PIVOT REPORT, USING CASE 1st SYNTAX)


-- COMPANY PAYS IN NEXT MONTH ON FIRST WEDNESDAY AFTER DATE 10. DISPLAY LAST PAYMENT DATE.


-- DISPLAY -12345.67 VALUE IN SPECIFIED FORMAT : {12:345;67} (DON'T USE ALTER SESSION)


-- COUNT EMPLOYEES WHOSE LAST_NAME EITHER STARTS OR ENDS WITH Z OR z
-- SELECT COUNT(*) FROM EMPLOYEES
-- WHERE SUBSTR(LAST_NAME,1,1) = 'Z'
--     OR
--     SUBSTR(LAST_NAME,1,1) = 'z'
--     OR
--     SUBSTR(LAST_NAME,-1,1) = 'z'
--     OR
--     SUBSTR(LAST_NAME,-1,1) = 'Z';

-- DISPLAY FIRST_NAME , HIRE_DATE , SALARY. SALARY MUST BE OUTSIDE RANGE 5500 AND 11200. DISPLAY ALL OTHER THAN 5 EMPLOYEES, WHO WERE HIRED EARLIEST BY THE COMPANY. 
-- SELECT FIRST_NAME , HIRE_DATE , SALARY FROM 
-- (SELECT FIRST_NAME , HIRE_DATE , SALARY 
--     FROM EMPLOYEES
--     WHERE SALARY BETWEEN  5000 AND 11200 
--      ORDER BY HIRE_DATE)
-- WHERE ROWNUM >5; 


-- DISPLAY MANAGER WISE LOWEST SALARY , HIGHEST SALARY, DISPLAY ONLY THOSE ROWS WHICH HAS AVERAGE SALARY IN THE RANGE OF 6000 AND 9000
-- —> SELECT MANAGER_ID , MIN(SALARY) , MAX(SALARY) FROM EMPLOYEES
-- WHERE MANAGER_ID IN(SELECT MANAGER_ID FROM EMPLOYEES GROUP BY MANAGER_ID HAVING AVG(SALARY) BETWEEN 6000 AND 9000)
--      GROUP BY MANAGER_ID;


-- DISPLAY FIRST_NAME AND OTHER COLUMN WHICH WILL REMOVE ALL VOWELS FROM RIGHT AND ALL CONSONENTS FROM LEFT. 


-- DISPLAY FIRST_NAME , HIRE_DATE , NO. OF DAYS WORKED IN HIRED QUARTER AND NO. OF DAYS WORKED IN HIRE YEAR. 



-- DISPLAY FIRST_NAME , SALARY , HIRE_DATE. EMPLOYEE SHOULD BE HIRED IN ANY YEAR OF 99,98 OR 87. DISPLAY ONLY THOSE WHO GETS 3rd LOWEST SALARY UPTO 6th LOWEST SALARY.
-- SELECT FIRST_NAME , SALARY , HIRE_DATE FROM EMPLOYEES 
-- WHERE TO_CHAR(HIRE_DATE,'YYYY') IN('1987','1998','1999') 
-- ORDER BY 2 ASC OFFSET 2 ROWS FETCH NEXT 4 ROWS ONLY;