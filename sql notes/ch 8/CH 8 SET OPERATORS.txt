-- 1 DISPLAY THOSE EXISTING EMPLOYEE_ID WHO HAVE GOT PROMOTION.

-- SELECT * FROM EMPLOYEES WHERE EMPLOYEE_ID IN(
--     (SELECT EMPLOYEE_ID FROM JOB_HISTORY)
--     INTERSECT
--     (SELECT EMPLOYEE_ID FROM EMPLOYEES)
-- );
  
-- 2 DISPLAY THOSE EMPLOYEE_ID WHO HAVE LEFT THE COMPANY.

-- SELECT * FROM (
--     (SELECT EMPLOYEE_ID FROM JOB_HISTORY)
--     MINUS
-- 	(SELECT EMPLOYEE_ID FROM EMPLOYEES)
-- );
  
-- 3 DISPLAY ALL FIRST_NAME AND DEPARTMENT_NAME IN SINGLE RESULT SET WITH PROPER COLUMN HEADING.

-- SELECT FIRST_NAME EMPLOYEE_NAME, 'Employee' EMPLOYEE_TYPE FROM EMPLOYEES
-- UNION
-- SELECT DEPARTMENT_NAME EMPLOYEE_NAME, 'Department' EMPLOYEE_TYPE FROM DEPARTMENTS;
  
-- 4 DISPLAY DEPARTMENT_ID IN WHICH NO EMPLOYEE IS HIRED.

-- SELECT DEPARTMENT_ID FROM DEPARTMENTS
-- MINUS
-- SELECT DEPARTMENT_ID FROM EMPLOYEES;
  
-- 5 DISPLAY THOSE REGION_ID IN WHICH NO LOCATION EXISTS.
-- L C R

-- SELECT REGION_ID FROM REGIONS
-- MINUS
-- (SELECT REGION_ID FROM COUNTRIES WHERE COUNTRY_ID IN(
--     SELECT COUNTRY_ID FROM LOCATIONS
--     UNION
--     SELECT COUNTRY_ID FROM COUNTRIES
-- ));
  
-- 6 DISPLAY GRADE_LEVEL IN WHICH NO EMPLOYEE IS GETTING SALARY.

-- SELECT GRADE_LEVEL FROM JOB_GRADES
-- MINUS
-- SELECT GRADE_LEVEL FROM JOB_GRADES
-- JOIN EMPLOYEES ON SALARY BETWEEN LOWEST_SAL AND HIGHEST_SAL;
  
-- 7 DISPLAY COUNTRY_ID IN WHICH NO LOCATION EXISTS.

-- SELECT COUNTRY_ID FROM COUNTRIES
-- MINUS
-- SELECT COUNTRY_ID FROM LOCATIONS;
  
-- 8 DISPLAY ONLY THOSE DEPARTMENT_NAME IN WHICH EMPLOYEES ARE WORKING.

SELECT DEPARTMENT_NAME,DEPARTMENT_ID FROM DEPARTMENTS
UNION ALL(
    SELECT DEPARTMENT_NAME, DEPARTMENT_ID FROM DEPARTMENTS WHERE DEPARTMENT_ID IN(
    SELECT DEPARTMENT_ID FROM EMPLOYEES
    UNION
    SELECT DEPARTMENT_ID FROM DEPARTMENTS)
) ORDER BY 2;

SELECT DEPARTMENT_NAME FROM DEPARTMENTS;
SELECT * FROM EMPLOYEES;

-- 9 DISPLAY THOSE EXISTING EMPLOYEE'S FIRST_NAME WHO HAVE NOT GOT ANY PROMOTION.

-- 10 DISPLAY ONLY THOSE COUNTRY_NAME IN WHICH LOCATION EXISTS.

-- 11 DISPLAY ONLY THOSE REGION_NAME IN WHICH COUNTRY EXISTS.

-- 12 DISPLAY THOSE JOB_ID FOR WHICH EMPLOYEES WERE HIRED UNTIL YEAR 95, BUT NOT AFTER THAT.

-- 13 DISPLAY THOSE JOB_ID FOR WHICH EMPLOYEES WERE HIRED UNTIL YEAR 95, AS WELL AS AFTER 95.

-- 14 DISPLAY DEPARTMENT_ID FOR WHICH COMPANY HIRED EMPLOYEES IN FIRST HALF OF ANY YEAR AS WELL AS SECOND HALF OF ANY YEAR.

-- 15 DISPLAY DEPARTMENT_ID FOR WHICH COMPANY HIRED EMPLOYEES IN FIRST HALF OF ANY YEAR BUT NOT IN SECOND HALF OF ANY YEAR.

-- 16 DISPLAY JOB_ID FOR WHICH EMPLOYEE GETS SALARY UPTO 8000 AS WELL AS MORE THAN 8000.

-- 17 DISPLAY JOB_ID FOR WHICH EMPLOYEE GETS SALARY UPTO 8000 BUT NOT MORE THAN 8000.

-- 18 DISPLAY JOB_ID FOR WHICH EMPLOYEE GETS SALARY MORE THAN 10000 BUT NOT UPTO 10000.

-- 19 DISPLAY EMPLOYEE_ID , DEPARTMENT_ID , MANAGER_ID FOR THOSE EMPLOYEES WHO REPORT TO HIS DEPARTMENT HEAD.

-- 20 DISPLAY DEPARTMENT_ID , MANAGER_ID FOR THOSE EMPLOYEES WHO DOESN'T REPORT TO HIS DEPARTMENT HEAD.

-- 21 DISPLAY THOSE JOB_ID FOR WHICH EMPLOYEES WERE HIRED IN ODD QUARTERS BUT NOT IN EVEN QUARTERS. (IGNORE YEAR)

-- ==========================================================
-- FOR SOLVING BELOW QUESTIONS USE MPSEMP AND MPSDEPT TABLES.
-- ==========================================================

-- 22 DISPLAY ALL JOBS INCLUDING DUPLICATE FOR DEPTNO 20 AND 30.

-- 23 DISPLAY ALL DISTINCT JOB FOR WHICH EMPLOYEES ARE HIRED IN BOTH DEPTNO 10 AND 30.

-- 24 DISPLAY ALL DNAME AND LOC IN SINGLE COLUMN (ONE ABOVE THE OTHER) WITH PROPER COLUMN HEADING.

-- 25 DISPLAY ONLY THOSE JOBS FOR WHICH EMPLOYEES ARE HIRED IN DEPTNO 30 BUT NOT FOR REMAINING DEPARTMENTS.

-- 26 DISPLAY ALL JOBS OF DEPTNO 10 AND 20 WHICH ARE NOT PRESENT IN DEPTNO 30.

-- 27 DISPLAY ONLY THOSE JOBS FOR WHICH COMPANY HAS HIRED EMPLOYEES ON BOTH YEARS 1981 AND 1982.

-- 28 (USE EMPLOYEES TABLE) DISPLAY THOSE JOBS FOR WHICH COMPANY HAS HIRED EMPLOYEES IN BOTH 1996 AND 1998 BUT NOT IN 1999.

-- 29 DISPLAY STAFF, SUBJECT AND COLUMN NAMED CAN. WHICH SHOULD DISPLAY YES OR NO, BASED ON STAFF CAN TEACH THE SUBJECT OR NOT.

-- 30 DISPLAY JOB_ID AND SUM OF SALARY PAID TO EACH JOB AND DEPTNO AND NO. EMPLOYEES WORKS FOR EACH DEPTNO ONE ABOVE THE ANOTHER IN SINGLE RESULT SET. SORT RESULT ON LAST COLUMN.

-- 31 DEVELOP ENAME AND EMPNO AS FIRST RESULT SET. DNAME AS SECOND RESULT SET AND CLUB BOTH VERTICALLY.

-- 32 DEVELOP DEPTNO AND HIREDATE AS FIRST RESULT SET. ENAME AND DEPTNO AS SECOND RESULT SET. DISPLAY THEM AS SINGLE RESULT SET.
